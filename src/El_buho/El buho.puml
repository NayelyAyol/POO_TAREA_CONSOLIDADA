@startuml
abstract class Servicios{
    - asiento:String
    - precio: double
    - numMaletas: int
    + Servicio(asiento: String, precio: double, numMaletas: int)
    + getAsiento(): String
    + setAsiento(asiento: String): void
    + getPrecio(): double
    + setPrecio(precio: double): void
    + getNumMaletas(): int
    + setNumMaletas(numMaletas: int): void
    + costoAdicional(numMaletas: int): double (abstracto)
}

class Normal extends Servicios{
    + Normal(asiento: String, precio: double, numMaletas: int)
    + costoAdicional(numMaletas: int): double
    + infoServNormal(): void
}

class Vip extends Servicios{
    - tv: boolean
    - internet: boolean
    - comida: boolean
    - alcohol: boolean
    + Vip(asiento: String, precio: double, numMaletas: int, tv: boolean, internet: boolean, comida: boolean, alcohol: boolean)
    + costoAdicional(numMaletas: int): double
    + mostrarInfoVip(): void
}

class Ruta {
     - origen: String
     - destino: String
     - precio: double
     + Ruta(origen: String, destino: String, precio: double)
     + getPrecio(): double
     + setPrecio(precio: double): void
     + infoRuta(): void
}

class Pasajero {
     - nombre: String
     - cedula: String
     + Pasajero(nombre: String, cedula: String)
     + infoPasajero(): void
     + getNombre(): String
     + setNombre(nombre: String):void
     + getCedula() : String
     + setCedula(cedula: String) : void
}

class Ticket {
      - ruta: Ruta
      - pasajero: Pasajero
      - servicio: Servicio
      + Ticket(ruta: Ruta, pasajero: Pasajero, servicio: Servicio)
      + calcularCostoTotal(): double
      + mostrarInfoTicket(): void
}

    Ticket --> Ruta
    Ticket --> Pasajero
    Ticket -->Servicios
@enduml